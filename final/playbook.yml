---
- name: check for ssh
  hosts: all
  gather_facts: no
  tasks:
    - name: check ssh state
      wait_for:
        port: 22
        host: '{{ ansible_host }}'
        search_regex: OpenSSH
        delay: 5
      connection: local

- name: preparations
  hosts: all
  become: yes
  tasks:
    - name: edit hosts
      lineinfile:
        path: /etc/hosts
        line: '{{ hostvars[item]["ansible_host"] }} {{ hostvars[item]["inventory_hostname"] }}'
      with_items: '{{ groups["servers"] }}'
    - name: set hostname
      hostname:
        name: '{{ inventory_hostname }}'

- name: install Zookeeper
  hosts: server1, server2, server3
  become: yes
  roles:
    - lean_delivery.java
    - idealista.zookeeper_role

- name: install ClickHouse
  hosts: all
  become: yes
  roles:
    - ansible-clickhouse
  pre_tasks:
    - name: create target folder
      file:
        path: /etc/clickhouse-server/
        state: directory
        mode: '0666'
    - name: create cluster template file
      template:
        src: files/cluster.xml.j2
        dest: /etc/clickhouse-server/cluster.xml
        mode: '0644'
  tasks:
    - name: start service
      service:
        name: clickhouse-server
        state: restarted

- name: create local table
  hosts: server1
  tasks:
    - name: copy init table query file
      copy:
        src: files/replicated_table.sql
        dest: .
    - name: exec init table query
      shell: clickhouse-client --database default --queries-file replicated_table.sql
    - name: Sleep a little
      wait_for:
        timeout: 5
      delegate_to: localhost

- name: create distributed table
  hosts: server1
  tasks:
    - name: copy init distributed query file
      copy:
        src: files/distributed_table.sql
        dest: .
    - name: exec init distributed table query
      shell: clickhouse-client --database "default" --queries-file distributed_table.sql
    - name: Sleep a little
      wait_for:
        timeout: 5
      delegate_to: localhost

- name: insert data
  hosts: server1
  tasks:
    - name: copy dataset
      copy:
        src: files/dataset.csv
        dest: .
    - name: exec query
      shell: clickhouse-client --query "INSERT INTO events_distributed FORMAT CSV" < dataset.csv
